[{"F:\\Fiverr Projects\\bet-app\\src\\reportWebVitals.js":"1","F:\\Fiverr Projects\\bet-app\\src\\App.js":"2","F:\\Fiverr Projects\\bet-app\\src\\containers\\Home.jsx":"3","F:\\Fiverr Projects\\bet-app\\src\\containers\\Login.jsx":"4","F:\\Fiverr Projects\\bet-app\\src\\containers\\Signup.jsx":"5","F:\\Fiverr Projects\\bet-app\\src\\config\\router\\index.js":"6","F:\\Fiverr Projects\\bet-app\\src\\index.js":"7","F:\\Fiverr Projects\\bet-app\\src\\containers\\AuthWith.jsx":"8","F:\\Fiverr Projects\\bet-app\\src\\config\\firebase\\index.js":"9","F:\\Fiverr Projects\\bet-app\\src\\containers\\SelectLeague.jsx":"10","F:\\Fiverr Projects\\bet-app\\src\\containers\\NonPLList.jsx":"11","F:\\Fiverr Projects\\bet-app\\src\\containers\\PLList.jsx":"12","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\Football.jsx":"13","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\football\\FLeague1.jsx":"14","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\football\\FLeague3.jsx":"15","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\football\\FLeague2.jsx":"16","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\basketball\\BLeague1.jsx":"17","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\Basketball.jsx":"18","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\basketball\\BLeague2.jsx":"19","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\handball\\HLeague2.jsx":"20","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\Handball.jsx":"21","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\handball\\HLeague3.jsx":"22","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\basketball\\BLeague3.jsx":"23","F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\handball\\HLeague1.jsx":"24","F:\\Fiverr Projects\\bet-app\\src\\containers\\SelectOption.jsx":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":139,"mtime":1614782175879,"results":"28","hashOfConfig":"27"},{"size":260,"mtime":1614881164794,"results":"29","hashOfConfig":"27"},{"size":7197,"mtime":1616485967592,"results":"30","hashOfConfig":"27"},{"size":15417,"mtime":1616485996351,"results":"31","hashOfConfig":"27"},{"size":2822,"mtime":1616843965798,"results":"32","hashOfConfig":"27"},{"size":500,"mtime":499162500000,"results":"33","hashOfConfig":"27"},{"size":3211,"mtime":1616485900704,"results":"34","hashOfConfig":"27"},{"size":455,"mtime":1616881413253,"results":"35","hashOfConfig":"27"},{"size":1500,"mtime":1616486069421,"results":"36","hashOfConfig":"27"},{"size":1813,"mtime":1616694951074,"results":"37","hashOfConfig":"27"},{"size":1723,"mtime":1616528565910,"results":"38","hashOfConfig":"27"},{"size":1628,"mtime":1616521236644,"results":"39","hashOfConfig":"27"},{"size":2121,"mtime":1616845190691,"results":"40","hashOfConfig":"27"},{"size":2123,"mtime":1616881826898,"results":"41","hashOfConfig":"27"},{"size":2125,"mtime":1616881840037,"results":"42","hashOfConfig":"27"},{"size":1737,"mtime":1616694855627,"results":"43","hashOfConfig":"27"},{"size":1640,"mtime":1616528520977,"results":"44","hashOfConfig":"27"},{"size":1737,"mtime":1616694863022,"results":"45","hashOfConfig":"27"},{"size":1737,"mtime":1616694884942,"results":"46","hashOfConfig":"27"},{"size":1723,"mtime":1616528491230,"results":"47","hashOfConfig":"27"},{"size":1737,"mtime":1616694894761,"results":"48","hashOfConfig":"27"},{"size":1737,"mtime":1616694869654,"results":"49","hashOfConfig":"27"},{"size":1737,"mtime":1616694878018,"results":"50","hashOfConfig":"27"},{"size":1248,"mtime":1616845283982,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"143f585",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},"F:\\Fiverr Projects\\bet-app\\src\\reportWebVitals.js",[],["109","110"],"F:\\Fiverr Projects\\bet-app\\src\\App.js",[],["111","112"],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Home.jsx",[],["113","114"],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Login.jsx",["115"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useForm } from \"react-hook-form\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport '../App.css';\r\nimport { useHistory } from 'react-router-dom';\r\n// import 'bootstrap/dist/js/bootstrap.bundle';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n        borderRadius: 5,\r\n    },\r\n    colorPrimary: {\r\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n    bar: {\r\n        borderRadius: 5,\r\n        backgroundColor: '#1d0033',\r\n    },\r\n}))(LinearProgress);\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n    const [btnDisable, setBtnDisable] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleChange = () => {\r\n        if (showPassword) {\r\n            setShowPassword(false);\r\n        }\r\n        else {\r\n            setShowPassword(true);\r\n        }\r\n    }\r\n\r\n    const goToAuthWith = () => {\r\n        history.push('/authentication')\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Sport Bet || Login \"\r\n    }, [])\r\n\r\n    const onSubmit = data => {\r\n        setBtnDisable(true);\r\n        setTimeout(() => {\r\n            alert(\"Account created successfully\");\r\n            setBtnDisable(false);\r\n        }, 3000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"bgColor\">\r\n            <div className=\"row\" style={{ paddingTop: \"100px\", paddingBottom: \"100px\" }}>\r\n                <div className=\"col-lg-6 col-md-8 col-12 mx-auto bg-white rounded shadow\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-10 col-md-10 col-sm-10 col-10 mx-auto\">\r\n                            <div className=\"mt-4\">\r\n                                <button className=\"btn_back\" onClick={goToAuthWith}>\r\n                                    <NavigationIcon className=\"back_icon\" />\r\n                                    <span className=\"ml-1\">Back</span>\r\n                                </button>\r\n                            </div>\r\n                            <h1 className=\"signup_title mt-4\">Login to your account</h1>\r\n                            <div className=\"mt-3 mb-5\">\r\n                                <p>Please fill out the all necessary fields properly...</p>\r\n                                <BorderLinearProgress variant=\"determinate\" value={60} />\r\n                            </div>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                {/* Email TextField */}\r\n                                <div className=\"mb-3\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <div style={{ position: \"relative\" }}>\r\n                                        <i className=\"icon\"><MailIcon /></i>\r\n                                        <input type=\"text\"\r\n                                            className=\"signup_inpStyle shadow-sm border mt-2\"\r\n                                            name=\"email\"\r\n                                            ref={register({\r\n                                                required: \"Email Address is required\",\r\n                                                pattern: {\r\n                                                    value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                                                    message: \"Email address is invalid\",\r\n                                                }\r\n                                            })} />\r\n                                    </div>\r\n                                    {errors.email && <span className=\"small text-danger\">\r\n                                        {errors.email.message}\r\n                                    </span>}\r\n                                </div>\r\n\r\n                                {/* Password TextField */}\r\n                                <div className=\"mb-3\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <div style={{ position: \"relative\" }}>\r\n                                        <i className=\"icon\"><LockIcon /></i>\r\n                                        <input\r\n                                            type={showPassword ? \"text\" : \"password\"}\r\n                                            className=\"signup_inpStyle shadow-sm border mt-2\"\r\n                                            name=\"password\"\r\n                                            ref={register({\r\n                                                required: \"Password is required\",\r\n                                            })} />\r\n                                    </div>\r\n                                    {errors.password && <span className=\"small text-danger\">\r\n                                        {errors.password.message}\r\n                                    </span>}\r\n                                    <div>\r\n                                        <FormControlLabel\r\n                                            value=\"end\"\r\n                                            control={<Checkbox color=\"primary\" />}\r\n                                            label=\"Show Password\"\r\n                                            className=\"font-poppins\"\r\n                                            labelPlacement=\"end\"\r\n                                            onChange={handleChange}\r\n                                            checked={showPassword}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"mb-3\">\r\n                                    {btnDisable ? <button className=\"disbtn_signup rounded\" type=\"button\">\r\n                                        <span className=\"spinner-grow spinner-grow-sm mr-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                        <span className=\"spinner-grow spinner-grow-sm mr-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                        <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                    </button> : <button class=\"btn_signup\" type=\"submit\">Login</button>}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","F:\\Fiverr Projects\\bet-app\\src\\containers\\Signup.jsx",["116","117"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useForm } from \"react-hook-form\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport '../App.css';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport firebase from '../config/firebase';\r\n// import 'bootstrap/dist/js/bootstrap.bundle';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n        borderRadius: 5,\r\n    },\r\n    colorPrimary: {\r\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n    bar: {\r\n        borderRadius: 5,\r\n        backgroundColor: '#1d0033',\r\n    },\r\n}))(LinearProgress);\r\n\r\nconst Signup = () => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const history = useHistory();\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n    const [btnDisable, setBtnDisable] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n\r\n    const handleChange = () => {\r\n        if (showPassword) {\r\n            setShowPassword(false);\r\n        }\r\n        else {\r\n            setShowPassword(true);\r\n        }\r\n    }\r\n\r\n    const goToAuthWith = () => {\r\n        history.push('/authentication')\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"Sport Bet || Signup \"\r\n    }, [])\r\n\r\n    const onSubmit = data => {\r\n        setBtnDisable(true);\r\n        history.push('/selectleague');\r\n        // firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n        //     .then((userCredential) => {\r\n        //         firebase.firestore().collection(\"users\").doc(userCredential.user.uid).set({\r\n        //             username: `${data.firstName} ${data.lastName}`,\r\n        //             email: data.email,\r\n        //         })\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         var errorCode = error.code;\r\n        //         var errorMessage = error.message;\r\n        //         setErrorMsg(errorMessage);\r\n        //         // ..\r\n        //     });\r\n    }\r\n\r\n    return (\r\n        <div className=\"bgColor\">\r\n            <div className=\"row\" style={{ paddingTop: \"100px\", paddingBottom: \"100px\" }}>\r\n                <div className=\"col-lg-6 col-md-8 col-12 mx-auto bg-white rounded shadow\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-10 col-md-10 col-sm-10 col-10 mx-auto\">\r\n                            <div className=\"mt-4\">\r\n                                <button className=\"btn_back\" onClick={goToAuthWith}>\r\n                                    <NavigationIcon className=\"back_icon\" />\r\n                                    <span className=\"ml-1\">Back</span>\r\n                                </button>\r\n                            </div>\r\n                            <h1 className=\"signup_title mt-4\">Create new account</h1>\r\n                            <div className=\"mt-3 mb-5\">\r\n                                <p>Please fill out the all necessary fields properly...</p>\r\n                                <BorderLinearProgress variant=\"determinate\" value={60} />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <Collapse in={open}>\r\n                                    <Alert\r\n                                        severity=\"error\"\r\n                                        action={\r\n                                            <IconButton\r\n                                                aria-label=\"close\"\r\n                                                color=\"inherit\"\r\n                                                size=\"small\"\r\n                                                onClick={() => {\r\n                                                    setOpen(false);\r\n                                                }}\r\n                                            >\r\n                                                <CloseIcon fontSize=\"inherit\" />\r\n                                            </IconButton>\r\n                                        }\r\n                                    >\r\n                                        {errorMsg}!\r\n                                    </Alert>\r\n                                </Collapse>\r\n                            </div>\r\n\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                                {/* Name TextFields  */}\r\n                                <div className=\"mb-3\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <label for=\"name\">First Name</label>\r\n                                            <div style={{ position: \"relative\" }}>\r\n                                                <i className=\"icon\"><PersonIcon /></i>\r\n                                                <input type=\"text\"\r\n                                                    className=\"signup_inpStyle shadow-sm border mt-2\"\r\n                                                    name=\"firstName\"\r\n                                                    ref={register({\r\n                                                        required: \"First Name required\",\r\n                                                        // pattern: {\r\n                                                        //     value: /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/,\r\n                                                        //     message: \"First Name contain number\",\r\n                                                        // },\r\n                                                        maxLength: {\r\n                                                            value: 20,\r\n                                                            message: \"First Name length less than 20 letters\",\r\n                                                        }\r\n                                                    })} />\r\n                                            </div>\r\n                                            {errors.firstName && <span className=\"small text-danger\">\r\n                                                {errors.firstName.message}\r\n                                            </span>}\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <label for=\"name\">Last Name</label>\r\n                                            <div style={{ position: \"relative\" }}>\r\n                                                <i className=\"icon\"><PersonIcon /></i>\r\n                                                <input type=\"text\"\r\n                                                    className=\"signup_inpStyle shadow-sm border mt-2\"\r\n                                                    name=\"lastName\"\r\n                                                    ref={register({\r\n                                                        required: \"Last Name required\",\r\n                                                        // pattern: {\r\n                                                        //     value: /^[a-zA-Z-,]+(\\s{0,1}[a-zA-Z-, ])*$/,\r\n                                                        //     message: \"Last Name contain number\",\r\n                                                        // },\r\n                                                        maxLength: {\r\n                                                            value: 20,\r\n                                                            message: \"Last Name length less than 20 letters\",\r\n                                                        }\r\n                                                    })} />\r\n                                            </div>\r\n                                            {errors.lastName && <span className=\"small text-danger\">\r\n                                                {errors.lastName.message}\r\n                                            </span>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Email TextField */}\r\n                                <div className=\"mb-3\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <div style={{ position: \"relative\" }}>\r\n                                        <i className=\"icon\"><MailIcon /></i>\r\n                                        <input type=\"text\"\r\n                                            className=\"signup_inpStyle shadow-sm border mt-2\"\r\n                                            name=\"email\"\r\n                                            ref={register({\r\n                                                required: \"Email Address is required\",\r\n                                                pattern: {\r\n                                                    value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n                                                    message: \"Email address is invalid\",\r\n                                                }\r\n                                            })} />\r\n                                    </div>\r\n                                    {errors.email && <span className=\"small text-danger\">\r\n                                        {errors.email.message}\r\n                                    </span>}\r\n                                </div>\r\n\r\n                                {/* Gender */}\r\n                                <div className=\"mb-3\">\r\n                                    <label>Gender</label>\r\n                                    <div class=\"p-t-10\">\r\n                                        <label class=\"radio-container mr-5\">Male\r\n                                            <input type=\"radio\" name=\"gender\" />\r\n                                            <span class=\"checkmark\"></span>\r\n                                        </label>\r\n                                        <label class=\"radio-container\">Female\r\n                                            <input type=\"radio\" name=\"gender\" />\r\n                                            <span class=\"checkmark\"></span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Password TextField */}\r\n                                <div className=\"mb-3\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <div style={{ position: \"relative\" }}>\r\n                                        <i className=\"icon\"><LockIcon /></i>\r\n                                        <input\r\n                                            type={showPassword ? \"text\" : \"password\"}\r\n                                            className=\"signup_inpStyle shadow-sm border mt-2\"\r\n                                            name=\"password\"\r\n                                            ref={register({\r\n                                                required: \"Password is required\",\r\n                                                minLength: {\r\n                                                    value: 6,\r\n                                                    message: \"Password must have at least 6 characters\"\r\n                                                }\r\n                                            })} />\r\n                                    </div>\r\n                                    {errors.password && <span className=\"small text-danger\">\r\n                                        {errors.password.message}\r\n                                    </span>}\r\n                                    <div>\r\n                                        <FormControlLabel\r\n                                            value=\"end\"\r\n                                            control={<Checkbox color=\"primary\" />}\r\n                                            label=\"Show Password\"\r\n                                            className=\"font-poppins\"\r\n                                            labelPlacement=\"end\"\r\n                                            onChange={handleChange}\r\n                                            checked={showPassword}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Confirm Password TextField */}\r\n                                <div className=\"mb-3\">\r\n                                    <label for=\"password\">Confirm Password</label>\r\n                                    <div style={{ position: \"relative\" }}>\r\n                                        <i className=\"icon\"><LockIcon /></i>\r\n                                        <input\r\n                                            type={showPassword ? \"text\" : \"password\"}\r\n                                            className=\"signup_inpStyle shadow-sm border mt-2\"\r\n                                            name=\"confirmPassword\"\r\n                                            ref={register({\r\n                                                validate: values =>\r\n                                                    values === password.current || \"Password not match\"\r\n                                            })} />\r\n                                    </div>\r\n                                    {errors.confirmPassword && <span className=\"small text-danger\">\r\n                                        {errors.confirmPassword.message}\r\n                                    </span>}\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    {btnDisable ? <button className=\"disbtn_signup rounded\" type=\"button\">\r\n                                        <span className=\"spinner-grow spinner-grow-sm mr-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                        <span className=\"spinner-grow spinner-grow-sm mr-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                        <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                    </button> : <button class=\"btn_signup\" type=\"submit\">Signup</button>}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","F:\\Fiverr Projects\\bet-app\\src\\config\\router\\index.js",[],"F:\\Fiverr Projects\\bet-app\\src\\index.js",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\AuthWith.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\config\\firebase\\index.js",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\SelectLeague.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\NonPLList.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\PLList.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\Football.jsx",[],["118","119"],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\football\\FLeague1.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\football\\FLeague3.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\football\\FLeague2.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\basketball\\BLeague1.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\Basketball.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\basketball\\BLeague2.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\handball\\HLeague2.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\Handball.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\handball\\HLeague3.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\basketball\\BLeague3.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\Leagues\\handball\\HLeague1.jsx",[],"F:\\Fiverr Projects\\bet-app\\src\\containers\\SelectOption.jsx",["120"],"import React, { useEffect } from 'react';\r\n\r\nconst SelectOption = (props) => {\r\n\r\n    useEffect(() => {\r\n        document.title = \"Sport Bet || Select\";\r\n    }, []);\r\n\r\n    var team = localStorage.getItem('team');\r\n\r\n    return (\r\n        <div className=\"bgColor\">\r\n            <div className=\"row\" style={{ paddingTop: \"100px\", paddingBottom: \"100px\" }}>\r\n                <div className=\"col-lg-6 col-md-8 col-12 mx-auto bg-white rounded shadow\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-10 col-md-10 col-sm-10 col-10 mx-auto\">\r\n                            <h1 className=\"signup_title text-center mt-4\">Select {team} Option</h1>\r\n                            <div className=\"mt-4 mb-4\">\r\n                                <button className=\"btn_custom shadow border text-white mb-3\" style={{ backgroundColor: \"#1d0033\" }}>Predict Score</button>\r\n                                <button className=\"btn_custom shadow border text-white mb-3\" style={{ backgroundColor: \"#1d0033\" }}>Predict Outcome</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectOption;",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"121","replacedBy":"127"},{"ruleId":"123","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":18},{"ruleId":"129","severity":1,"message":"133","line":18,"column":8,"nodeType":"131","messageId":"132","endLine":18,"endColumn":16},{"ruleId":"129","severity":1,"message":"134","line":43,"column":22,"nodeType":"131","messageId":"132","endLine":43,"endColumn":33},{"ruleId":"121","replacedBy":"135"},{"ruleId":"123","replacedBy":"136"},{"ruleId":"129","severity":1,"message":"137","line":9,"column":9,"nodeType":"131","messageId":"132","endLine":9,"endColumn":13},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],["138"],["139"],"no-unused-vars","'PersonIcon' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'setErrorMsg' is assigned a value but never used.",["138"],["139"],"'team' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]